---
title: "Plotting eReefs data"
subtitle: "Plot eReefs data on a map {{< fa brands r-project >}}"
execute: # Set code cell execution options
  message: false
  warning: false
  code-overflow: wrap
  eval: false
---

<!-- IDEAS: 

* link between the two tutorials (e.g. from basic server access provide a link in the footer saying 'learn how to plot the extracted data on a map')
* explain CRS
* continue on to more advanced examples (e.g. ggplot, leaflet)
* follow on tutorial 'producing map animations' (e.g. with gganimate) 
-->

:::{.tutorial-description}
< **Tutorial blurb here** - can be the same as the blurb on the ereefs tutorials homepage >
> E.g. Learn how to ... in {{< fa brands r-project >}}/{{< fa brands r-project >}} python.
:::

:::{.callout-note appearance="simple"}
< **Optional link to previous tutorial in the series** > 
This tutorial builds on the techniques introduced in [< series title >:< tutorial title >< language icon {{< fa brands r-project >}} or {{< fa brands python >}} >](< relative link to .qmd file of previous tutorial >).
:::

< **Breif description of tutorial concepts and outcomes** >
> E.g. In this tutorial we will look at how to get eReefs data from the [AIMS server](http://thredds.ereefs.aims.gov.au/thredds/catalog.html) corresponding to the logged locations of tagged marine animals. Keep in mind, however, that the same methodology can be applied in any situation where we wish to extract eReefs data for a range of points with different dates of interest for each point. 

## R packages / Python modules
```{r RPackages}
library(<R package name>) # comment describing what specifically the package is used for in this tutorial
# E.g. 
library(readr) # to efficiently read in data
library(janitor) # to create consistent, 'clean' variable names
library(tidyverse) # for data manipulation and plotting with ggplot2
library(lubridate) # for working with date and time variables 
library(leaflet) # to create an interactive map of the tracking locations
library(knitr); library(kableExtra) # for better table printing
```

## Motivating problem

< **Brief introduction to the mock problem being solved within this tutorial** - including a little bit on the background/context of the problem generally, and a little bit on the specific instance of the problem in this tutorial >

> E.g. The tracking of marine animals is commonly used by researchers to gain insights into the distribution, biology, behaviour and ecology of different species. However, knowing where an animal was at a certain point in time is only one piece of the puzzle. To start to understand *why* an animal was where it was, we usually require information on things like: What type of habitat is present at the location? What were the environmental conditions like at the time? What other lifeforms were present at the tracked location (e.g. for food or mating)? <br> In this tutorial we will pretend that we have tracking data for Loggerhead Sea Turtles and wish to get eReefs data corresponding to the tracked points (in time and space) to understand more about the likely environmental conditions experienced by our turtles. 

:::{.callout-note collapse="true" icon="false"}

# Read more: < about what >

< **Extra information/background about the problem** - hidden from view initially to not clutter the tutorial with text which is not pertinent to the tutorial, but which may be valuable to users who like to learn about tools in the context of real-world (or at least mock real-world) problems, or which may give greater motivation to some users in general >

:::

## < Data section - e.g. 'The data' or more specific 'Example tracking data' 'Loggerhead turtle tracking data' etc >

< **Description of the dataset** - including citations where appropriate >

```{r dataImport}
# Read in <data name>
< data name > <- read_csv(...) |> clean_names()
```






