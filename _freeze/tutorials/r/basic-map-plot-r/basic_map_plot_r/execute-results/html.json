{
  "hash": "7a2aa1e33377007768db7e1d9370e78c",
  "result": {
    "markdown": "---\ntitle: \"Plot eReefs map data {{< fa brands r-project >}}\"\n---\n\n\nThis tutorial is based on the article [How to open and work with NetCDF data in R](https://rpubs.com/boyerag/297592).\n\n\n# Load the required R packages\nFirst of all, load the necessary libraries.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ncdf4) # package for netcdf manipulation\nlibrary(raster) # package for raster manipulation\nlibrary(ggplot2) # package for plotting\nlibrary(rgdal) # package for geospatial analysis\n```\n:::\n\n\n\n# Define which data to be plotted.\nIn this section we define which data we want to read and plot.\n\n- **inputFile**\n  The netCDF input file. This can either be a downloaded file (see [How to manually download derived data from THREDDS](http://ereefs.aims.local/ereefs-aims/help/how-to-manually-download-derived-data)) or a  OPeNDAP URL from the [AIMS THREDDS server](http://thredds.ereefs.aims.gov.au/thredds/catalog.html). For this tutorial we are using the OPeNDAP URL for the file \"EREEFS_AIMS-CSIRO_gbr4_v2_hydro_daily-monthly-2010-09.nc\".\n- **selectedVariable**\n  The name of the variable in the netCDF file.\n- **selectedTimeIndex**\n  The time slice in the netCDF file. For example, in the netCDF file \"EREEFS_AIMS-CSIRO_gbr4_v2_hydro_daily-monthly-2010-09.nc\" the time steps are \"days\". This means if you select `selectedTimeIndex=2` it refers to the second day in this file, which is 02/09/2010.\n- **selectedDepthIndex**\n  The depth slice in the netCDF file. See the following table for a mapping of index to value:\n\n  | Index (k) | Hydrodynamic 1km model | Hydrodynamic and BioGeoChemical 4km model |\n  | --------- | ---------------------- | ----------------------------------------- |\n  | 1         | -140.00 m              | -145.00 m                                 |\n  | 2         | -120.00 m              | -120.00 m                                 |\n  | 3         | -103.00 m              | -103.00 m                                 |\n  | 4         | -88.00 m               | -88.00 m                                  |\n  | 5         | -73.00 m               | -73.00 m                                  |\n  | 6         | -60.00 m               | -60.00 m                                  |\n  | 7         | -49.00 m               | -49.00 m                                  |\n  | 8         | -39.50 m               | -39.50 m                                  |\n  | 9         | -31.00 m               | -31.00 m                                  |\n  | 10        | -24.00 m               | -23.75 m                                  |\n  | 11        | -18.00 m               | -17.75 m                                  |\n  | 12        | -13.00 m               | -12.75 m                                  |\n  | 13        | -9.00 m                | -8.80 m                                   |\n  | 14        | -5.25 m                | -5.55 m                                   |\n  | 15        | -2.35 m                | -3.00 m                                   |\n  | 16        | -0.50 m                | -1.50 m                                   |\n  | 17        | n/a                    | -0.50 m                                   |\n\n\n--- \n\n\n::: {.cell}\n\n```{.r .cell-code}\n# OPeNDAP URL to file \"EREEFS_AIMS-CSIRO_gbr4_v2_hydro_daily-monthly-2010-09.nc\". Hydrodynamic 4km model, daily data for the month September 2010\ninput_file <- \"https://thredds.ereefs.aims.gov.au/thredds/dodsC/s3://aims-ereefs-public-prod/derived/ncaggregate/ereefs/gbr4_v2/daily-monthly/EREEFS_AIMS-CSIRO_gbr4_v2_hydro_daily-monthly-2010-09.nc.html\"\ninput_file\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"https://thredds.ereefs.aims.gov.au/thredds/dodsC/s3://aims-ereefs-public-prod/derived/ncaggregate/ereefs/gbr4_v2/daily-monthly/EREEFS_AIMS-CSIRO_gbr4_v2_hydro_daily-monthly-2010-09.nc.html\"\n```\n:::\n\n```{.r .cell-code}\n# The \"temperature\" variable\nselectedVariable <- \"temp\"\nselectedVariable\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"temp\"\n```\n:::\n\n```{.r .cell-code}\n# 2nd of September 2010\nselectedTimeIndex <- 2\nselectedTimeIndex\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 2\n```\n:::\n\n```{.r .cell-code}\n# -1.50 m depth\nselectedDepthIndex <- 16\nselectedDepthIndex\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 16\n```\n:::\n:::\n\n\n\n# Read in the netCDF file contents\nRead in the netCDF file contents and store the latitude, longitude, time and depth data in variables for later use.\n\n::: {.cell}\n\n```{.r .cell-code}\n# ---------------------------------------\n# ERROR: THIS LINE IS FAILING TO RUN\nnc_data <- nc_open(input_file)\n# (or maybe just taking a very long time)\n# ---------------------------------------\n\nlon <- ncvar_get(nc_data, \"longitude\")\nhead(lon) # look at the first few entries in the longitude vector\nlat <- ncvar_get(nc_data, \"latitude\")\nhead(lat) # look at the first few entries in the latitude vector\ntime <- ncvar_get(nc_data, \"time\")\nhead(time) # look at the first few entries in the time vector\ndepth <- ncvar_get(nc_data, \"zc\")\nhead(depth) # look at the first few entries in the depth vector\n```\n:::\n\n\nRead in the data from the selected variable and select the time and depth slice.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nvariableData.slice <- ncvar_get(\n  nc = nc_data,\n  varid = selectedVariable,\n  start = c(1, 1, selectedDepthIndex, selectedTimeIndex),\n  count = c(length(lon), length(lat), 1, 1)\n)\ndim(variableData.slice)\n```\n:::\n\n\nNow that all data is stored in memory, close the netCDF file.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nnc_close(nc_data)\nprint(\"file closed\")\n```\n:::\n\n\n\n# Prepare data\n\nSave the data in a raster. We also need to transpose and flip to orient the data correctly.\n\n::: {.cell}\n\n```{.r .cell-code}\nr <- raster(t(variableData.slice), xmn = min(lon), xmx = max(lon), ymn = min(lat), ymx = max(lat), crs = CRS(\"+init=epsg:4326\"))\nr <- flip(r, direction = 'y')\ndim(r)\n```\n:::\n\n\n\n# Plotting\nFinally, plot the data.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(r)\n```\n:::",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}